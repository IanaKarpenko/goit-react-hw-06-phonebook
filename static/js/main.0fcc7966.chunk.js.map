{"version":3,"sources":["components/Filter/Filter.module.scss","redux/contacts/contact-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","redux/contacts/contact-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","deleteAll","changeFilter","connect","state","contacts","dispatch","onAdd","actions","onDeleteAll","useState","setName","setNumber","className","styles","formStyle","htmlFor","labelInput","inputStyle","type","value","pattern","title","onChange","evt","target","required","formButton","onClick","preventDefault","find","contact","alert","getFilteredContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","onDelete","listStyle","map","item","itemInternal","deleteButton","Filter","currentValue","onFilterChange","filterContainer","filterStyle","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","namesPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0fcc7966.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__E5ub9\",\"filterStyle\":\"Filter_filterStyle__2WJYF\",\"labelInput\":\"Filter_labelInput__qk05O\"};","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contact/add', (name, number)=>({\r\n    payload: {\r\n        id: shortid.generate(),\r\n        name,\r\n        number\r\n}}));\r\nconst deleteContact = createAction('contact/delete');\r\nconst deleteAll = createAction('contact/deleteAll');\r\nconst changeFilter = createAction('filter/changeFilter');\r\n\r\nexport default { addContact, deleteContact, deleteAll, changeFilter };","import styles from './ContactForm.module.scss';\nimport PropTypes from 'prop-types';\nimport { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contact-actions';\n\nconst ContactForm = ({ contacts, onAdd, onDeleteAll }) => {\n\n    const [name, setName] = useState(\"\");\n    const [number, setNumber] = useState(\"\");\n\n    const onAddButton = (evt) => {\n        evt.preventDefault();\n        if (contacts.find(contact=>(contact.name===name))) {\n            alert(`${name} уже в списке!`);\n            return;\n        }\n        onAdd(name, number);\n        setName(\"\");\n        setNumber(\"\")\n    }\n\n    const onDeleteAllButton = () => {\n        onDeleteAll();\n    }\n\n    return (\n        <form id=\"contactForm\" className={styles.formStyle}>\n            <label htmlFor=\"contactName\" className={styles.labelInput}>Name</label>\n            <input\n                id=\"contactName\"\n                className={styles.inputStyle}\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. \n                    Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                onChange={ evt => setName(evt.target.value) }\n                required\n            />\n            <label htmlFor=\"contactNumber\" className={styles.labelInput}>Number</label>\n            <input\n                id=\"contactNumber\"\n                className={styles.inputStyle}\n                type=\"tel\"\n                name=\"number\"\n                value={number}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                onChange={ evt => setNumber(evt.target.value) }\n                required\n            />\n            <button\n                type=\"button\"\n                value=\"Submit\"\n                className={styles.formButton}\n                onClick={onAddButton}\n                >Add contact\n            </button>\n            <button\n                type=\"button\"\n                value=\"button\"\n                className={styles.formButton}\n                onClick={onDeleteAllButton}\n                >Delete All\n            </button>\n        </form>\n    )\n\n}\n\nContactForm.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    })),\n    onAdd: PropTypes.func.isRequired,\n    onDeleteAll: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    contacts: state.contacts.contacts,\n  });\n  \nconst mapDispatchToProps = dispatch => ({\n    onAdd: (name, number) => dispatch(actions.addContact(name, number)),\n    onDeleteAll: () => dispatch(actions.deleteAll()),\n});\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import styles from './ContactList.module.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contact-actions';\n\nconst ContactList = ({ contacts, onDelete }) => {\n    return (\n        <ul className={styles.listStyle}>\n            {contacts.map(contact => {\n                return (\n                    <li key={contact.id} className={styles.item}>\n                        <div className={styles.itemInternal}>\n                        <span className={styles.name}>{contact.name}</span>\n                            :<span className={styles.number}>{contact.number}</span>\n                        </div>\n                            <button type='button' name={contact.name} className={styles.deleteButton} onClick={()=>onDelete(contact.id)}>Delete</button>\n                        \n                    </li>\n                )\n            })}\n        </ul>      \n    );\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired\n    })),\n    onDelete: PropTypes.func.isRequired\n}\n\nconst getFilteredContacts = (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase(); \n    return allContacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter));\n  };\n\nconst mapStateToProps = state => ({\n    contacts: getFilteredContacts(state.contacts.contacts, state.contacts.filter),\n  });\n  \n  const mapDispatchToProps = dispatch => ({\n    onDelete: (name) => dispatch(actions.deleteContact(name)),\n  });\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import styles from './Filter.module.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contact-actions';\n\nconst Filter = ({ currentValue, onFilterChange }) => {\n    return (\n        <div className={styles.filterContainer}>\n            <label htmlFor=\"contactName\" className={styles.labelInput}>Find contacts by name</label>\n            <input\n                id=\"filter\"\n                className={styles.filterStyle}\n                type=\"text\"\n                name=\"filter\"\n                value={currentValue}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. \n                    Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                onChange={onFilterChange}\n            />\n        </div>\n    );\n}\n\nFilter.defaultProps = {\n    currentValue: ''\n}\n\nFilter.propTypes = {\n    currentValue: PropTypes.string,\n    onFilterChange: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    currentValue: state.contacts.filter,\n  });\n  \nconst mapDispatchToProps = dispatch => ({\n    onFilterChange: (evt) => dispatch(actions.changeFilter(evt.target.value))\n});\n  \n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import './App.css';\nimport  ContactForm  from './components/ContactForm';\nimport  ContactList  from './components/ContactList';\nimport  Filter from './components/Filter';\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"Header\">Phonebook</h1>\n          <ContactForm />\n          <h2 className=\"SubHeader\">Contacts</h2>\n          <Filter />\n          <ContactList />\n        </header>\n      </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contact-actions';\r\n\r\nconst contacts = createReducer([], {\r\n    [actions.addContact]: (state, {payload}) => [payload, ...state],\r\n    [actions.deleteContact]: (state, { payload }) =>\r\n        state.filter(({ id }) => (id !== payload)),\r\n    [actions.deleteAll]: (state, _) => [],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter\r\n  });","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactReducer from './contacts/contact-reducer';\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n    logger,\r\n  ];\r\n\r\n  const namesPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter'],\r\n  };\r\n\r\n  const store = configureStore({\r\n    reducer: {\r\n      contacts: persistReducer(namesPersistConfig, contactReducer),\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n  });\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formStyle\":\"ContactForm_formStyle__seYp9\",\"inputStyle\":\"ContactForm_inputStyle__mjb_m\",\"labelInput\":\"ContactForm_labelInput__25erb\",\"formButton\":\"ContactForm_formButton__31L2n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listStyle\":\"ContactList_listStyle__3MArk\",\"number\":\"ContactList_number__2p0Bp\",\"name\":\"ContactList_name__2S3mh\",\"item\":\"ContactList_item__1tLcN\",\"itemInternal\":\"ContactList_itemInternal__3KGsY\",\"deleteButton\":\"ContactList_deleteButton__vYK0Q\"};"],"sourceRoot":""}